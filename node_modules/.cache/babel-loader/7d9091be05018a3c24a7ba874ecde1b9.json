{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rodriggolima/Documents/GitHub/app_uncisal/pygus-backoffice/src/Components/TaskForm/TaskFormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Components\n\nimport TaskFormView from './TaskFormView';\n\nconst TaskFormContainer = props => {\n  _s();\n\n  /**\n   * Open and close sillable modal\n   * @param {Boolean} boolean\n   */\n  const [sillableModal, setSillableModal] = useState(false);\n\n  const openCloseSillableModal = boolean => {\n    setSillableModal(boolean);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskFormView, {\n    sillableModal: sillableModal,\n    openCloseSillableModal: e => openCloseSillableModal(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskFormContainer, \"hz9G2vwu80+GCJ7u2ArxtQtppy8=\");\n\n_c = TaskFormContainer;\nexport default TaskFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFormContainer\");","map":{"version":3,"sources":["/Users/rodriggolima/Documents/GitHub/app_uncisal/pygus-backoffice/src/Components/TaskForm/TaskFormContainer.jsx"],"names":["React","useState","TaskFormView","TaskFormContainer","props","sillableModal","setSillableModal","openCloseSillableModal","boolean","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAEjC;AACJ;AACA;AACA;AACI,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCL,QAAQ,CAAC,KAAD,CAApD;;AACA,QAAMM,sBAAsB,GAAIC,OAAD,IAAa;AACxCF,IAAAA,gBAAgB,CAACE,OAAD,CAAhB;AACH,GAFD;;AAIA,sBAEI,QAAC,YAAD;AACI,IAAA,aAAa,EAAEH,aADnB;AAEI,IAAA,sBAAsB,EAAEI,CAAC,IAAIF,sBAAsB,CAACE,CAAD;AAFvD;AAAA;AAAA;AAAA;AAAA,UAFJ;AASH,CApBD;;GAAMN,iB;;KAAAA,iB;AAsBN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from 'react';\n\n// Components\nimport TaskFormView from './TaskFormView';\n\nconst TaskFormContainer = (props) => {\n\n    /**\n     * Open and close sillable modal\n     * @param {Boolean} boolean\n     */\n    const [ sillableModal, setSillableModal ] = useState(false);\n    const openCloseSillableModal = (boolean) => {\n        setSillableModal(boolean);\n    }\n\n    return(\n\n        <TaskFormView\n            sillableModal={sillableModal}\n            openCloseSillableModal={e => openCloseSillableModal(e)}\n        />\n\n    )\n\n}\n\nexport default TaskFormContainer;"]},"metadata":{},"sourceType":"module"}