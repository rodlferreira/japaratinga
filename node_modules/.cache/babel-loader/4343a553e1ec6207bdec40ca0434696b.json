{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rodriggolima/Documents/GitHub/app_uncisal/pygus-backoffice/src/Components/Level/LevelView.jsx\";\nimport React from 'react'; // Modules\n\nimport { Card, Breadcrumb, Form, Input, Button, Divider, Tag, Modal, Upload } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { UploadOutlined } from '@ant-design/icons'; // Style\n\nimport './LevelStyle.css';\n\nconst LevelView = props => {\n  // Level Selection\n  const sillables = [{\n    sillable: 'bo',\n    audio: 'bo.mp3'\n  }, {\n    sillable: 'ca',\n    audio: 'ca.mp3'\n  }];\n\n  const normFile = e => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && e.fileList;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '80vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: props.selectedLevel,\n      title: \"Adicionar uma s\\xEDlaba\",\n      onOk: () => props.addSillable,\n      okText: \"Adicionar\",\n      onCancel: () => props.openCloseSelectedLevel(false),\n      cancelText: \"Cancelar\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"S\\xEDlaba\",\n          name: \"sillable\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"audio\",\n          label: \"\\xC1udio\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: normFile // extra=\"longgggggggggggggggggggggggggggggggggg\"\n          ,\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            name: \"logo\",\n            action: \"/upload.do\",\n            listType: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 43\n              }, this),\n              children: \"Enviar \\xE1udio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: '100%',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Tarefa\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/home\",\n              children: \"In\\xEDcio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/home/level\",\n              children: \"Niveis de Dificuldade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"Nivel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            marginTop: 40\n          },\n          layout: \"vertical\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Nivel\",\n            name: \"level\",\n            style: {\n              width: 500\n            },\n            rules: [{\n              required: true,\n              message: 'Campo nome é obrigatório'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 10\n          },\n          children: \"S\\xEDlabas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), sillables.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"green\",\n              style: {\n                cursor: 'pointer'\n              },\n              children: el.sillable.toUpperCase()\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: 10\n          },\n          onClick: () => props.openCloseSelectedLevel(true),\n          children: \"Inserir s\\xEDlaba\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LevelView;\nexport default LevelView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LevelView\");","map":{"version":3,"sources":["/Users/rodriggolima/Documents/GitHub/app_uncisal/pygus-backoffice/src/Components/Level/LevelView.jsx"],"names":["React","Card","Breadcrumb","Form","Input","Button","Divider","Tag","Modal","Upload","Link","UploadOutlined","LevelView","props","sillables","sillable","audio","normFile","e","Array","isArray","fileList","height","position","selectedLevel","addSillable","openCloseSelectedLevel","maxHeight","overflow","marginTop","width","required","message","marginBottom","map","el","cursor","toUpperCase","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// Modules\nimport { Card, Breadcrumb, Form, Input, Button, Divider, Tag, Modal, Upload } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { UploadOutlined } from '@ant-design/icons';\n\n// Style\nimport './LevelStyle.css';\n\nconst LevelView = (props) => {\n\n    // Level Selection\n    const sillables = [\n        {\n            sillable: 'bo',\n            audio: 'bo.mp3'\n        },\n        {\n            sillable: 'ca',\n            audio: 'ca.mp3'\n        }\n    ];\n\n    const normFile = (e) => {\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n\n    return (\n\n        <div\n            style={{\n                height: '80vh',\n                position: 'relative'\n            }}\n        >\n            <Modal\n                visible={props.selectedLevel}\n                title='Adicionar uma sílaba'\n                onOk={() => props.addSillable}\n                okText='Adicionar'\n                onCancel={() => props.openCloseSelectedLevel(false)}\n                cancelText='Cancelar'\n            >\n                <Form\n                    layout='vertical'\n                >\n\n                    <Form.Item\n                        label=\"Sílaba\"\n                        name=\"sillable\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"audio\"\n                        label=\"Áudio\"\n                        valuePropName=\"fileList\"\n                        getValueFromEvent={normFile}\n                        // extra=\"longgggggggggggggggggggggggggggggggggg\"\n                    >\n                        <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                            <Button icon={<UploadOutlined />}>Enviar áudio</Button>\n                        </Upload>\n                    </Form.Item>\n\n                </Form>\n            </Modal>\n\n            <div\n                style={{\n                    maxHeight: '100%',\n                    overflow: 'auto'\n                }}\n            >\n\n                <Card\n                    title='Tarefa'\n                >\n\n                    <Breadcrumb>\n\n                        <Breadcrumb.Item>\n                            <Link to='/home'>Início</Link>\n                        </Breadcrumb.Item>\n\n                        <Breadcrumb.Item>\n                            <Link to='/home/level'>Niveis de Dificuldade</Link>\n                        </Breadcrumb.Item>\n\n                        <Breadcrumb.Item>\n                            Nivel\n                        </Breadcrumb.Item>\n\n                    </Breadcrumb>\n\n                    <Form\n                        style={{ marginTop: 40 }}\n                        layout='vertical'\n                    >\n\n                        <Form.Item\n                            label=\"Nivel\"\n                            name=\"level\"\n                            style={{\n                                width: 500\n                            }}\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Campo nome é obrigatório'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input />\n                        </Form.Item>\n\n                    </Form>\n\n                    <div\n                        style={{\n                            marginBottom: 10\n                        }}\n                    >\n                        Sílabas\n                    </div>\n\n                    {\n                        sillables.map(el => {\n\n                            return(\n                                <span>\n                                    <Tag\n                                        color='green'\n                                        key={el}\n                                        style={{\n                                            cursor: 'pointer'\n                                        }}\n                                    >\n                                        {el.sillable.toUpperCase()}\n                                    </Tag>\n                                </span>\n                            )\n                        })\n                    }\n\n                    <br />\n\n                    <Divider />\n\n                    <Button\n                        style={{\n                            marginRight: 10\n                        }}\n                        onClick={() => props.openCloseSelectedLevel(true)}\n                    >\n                        Inserir sílaba\n                    </Button>\n\n                    <Button\n                        type='primary'\n                    >\n                        Salvar\n                    </Button>\n\n                </Card>\n\n            </div>\n\n        </div>\n\n    )\n\n}\n\nexport default LevelView;"]},"metadata":{},"sourceType":"module"}